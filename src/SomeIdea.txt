How to show that no better equitable alloc (in the min max rank sense) exist ? maybe add one ~alloc for each case in the lower rectangle of preference, 
compute solution from there until no more improvement is made. Then use MUS? -Killian

CSP formulation is really natural, and seems relativerly fast. While 
that's good if we want speed (probably use an existing CSP solver in another language), the problem with the CSP formulation is the
lack of MUS-like structure. One thing That should be tried is counter-factual explanation (found that in some paper, ask me if you want)
-Killian

#####add redundant constraint representing the other way (I must have an object he desires less) -Killian
Tried that, no improvement in the solving time was made but it increases the construction time quite a lot...


Integer (Binary) Programming formulation is not efficient (See gurobi implementation in decide_LEF_IP). None of the tried
formulations in the different solver fare better in general to the SAT formulation. We will still look at the counter-factual
explanation talked in the new paper. -Killian


TODO: reduce mus some more by propagating singleton "alloc(i, oj)" -Killian

TODO: Speed up the writing of the SAT program (This is what takes the longuest) -Killian
